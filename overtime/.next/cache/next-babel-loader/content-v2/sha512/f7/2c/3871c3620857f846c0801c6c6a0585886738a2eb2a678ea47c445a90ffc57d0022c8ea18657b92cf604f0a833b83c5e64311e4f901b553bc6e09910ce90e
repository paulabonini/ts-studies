{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nexport default function Home() {\n  let [state, setState] = React.useState({\n    time: \"\",\n    overtime: \"\"\n  });\n\n  const handleChange = event => {\n    let value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: value\n    }));\n    console.log(state);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let a = parseInt(state.time);\n    let b = parseInt(state.overtime);\n    let soma = a + b;\n    console.log(soma);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\xE1lculo de horas trabalhadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"Horas trabalhadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"time\",\n        name: \"time\",\n        value: state.time,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"overtime\",\n        children: \"Valor Hora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"overtime\",\n        name: \"overtime\",\n        value: state.overtime,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Adicional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor x + y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // 1- O colaborador trabalha no mínimo 8h por dia (valor ideal)\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx"],"names":["React","Home","state","setState","useState","time","overtime","handleChange","event","value","target","name","console","log","handleSubmit","preventDefault","a","parseInt","b","soma"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBH,KAAK,CAACI,QAAN,CAAe;AACrCC,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAf,CAAxB;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AAEAN,IAAAA,QAAQ,iCACHD,KADG;AAEN,OAACM,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBF;AAFf,OAAR;AAKAG,IAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,GATD;;AAWA,QAAMY,YAAY,GAAIN,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACO,cAAN;AAEA,QAAIC,CAAC,GAAGC,QAAQ,CAACf,KAAK,CAACG,IAAP,CAAhB;AACA,QAAIa,CAAC,GAAGD,QAAQ,CAACf,KAAK,CAACI,QAAP,CAAhB;AAEA,QAAIa,IAAI,GAAGH,CAAC,GAAGE,CAAf;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAgB,MAAA,QAAQ,EAAEL,YAA1B;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,KAAK,EAAEZ,KAAK,CAACG,IAJf;AAKE,QAAA,QAAQ,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,KAAK,EAAEL,KAAK,CAACI,QAJf;AAKE,QAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoCD,C,CAED;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nexport default function Home() {\n  let [state, setState] = React.useState({\n    time: \"\",\n    overtime: \"\",\n  });\n\n  const handleChange = (event) => {\n    let value = event.target.value;\n\n    setState({\n      ...state,\n      [event.target.name]: value,\n    });\n\n    console.log(state);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let a = parseInt(state.time);\n    let b = parseInt(state.overtime);\n\n    let soma = a + b;\n\n    console.log(soma);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Cálculo de horas trabalhadas</h1>\n      <form id=\"form\" onSubmit={handleSubmit}>\n        <label htmlFor=\"time\">Horas trabalhadas</label>\n        <input\n          type=\"text\"\n          id=\"time\"\n          name=\"time\"\n          value={state.time}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"overtime\">Valor Hora</label>\n        <input\n          type=\"text\"\n          id=\"overtime\"\n          name=\"overtime\"\n          value={state.overtime}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Calcular</button>\n      </form>\n      <table>\n        <tr>\n          <th>Base</th>\n          <th>Adicional</th>\n          <th>Total</th>\n        </tr>\n        <tr>\n          <td>valor x</td>\n          <td>valor y</td>\n          <td>valor x + y</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\n// 1- O colaborador trabalha no mínimo 8h por dia (valor ideal)\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"\n"]},"metadata":{},"sourceType":"module"}