{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nexport default function Home() {\n  let {\n    0: variaveis,\n    1: setVariaveis\n  } = useState({\n    adicional: 0,\n    base: 0,\n    total: 0\n  });\n  let {\n    0: state,\n    1: setState\n  } = useState({\n    time: 0,\n    price: 0\n  });\n\n  const handleChange = event => {\n    let value = event.target.value;\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [event.target.name]: value\n    }));\n  };\n\n  const calcSalary = event => {\n    event.preventDefault();\n    setVariaveis({\n      adicional: (state.time - 8) * (state.price * 1.5),\n      base: state.price * 8,\n      total: variaveis.base + variaveis.adicional\n    });\n    console.log(variaveis.base, variaveis.adicional, variaveis.total);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\xE1lculo de horas trabalhadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"Horas trabalhadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"time\",\n        name: \"time\",\n        min: 8,\n        value: state.time,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: \"Valor Hora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"price\",\n        name: \"price\",\n        min: 20,\n        value: state.price,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: calcSalary,\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Adicional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: variaveis.base\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: variaveis.adicional\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: variaveis.total\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n} // 1- O colaborador trabalha no mínimo 8h por dia (valor ideal) = R$ 160,00\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais = R$30/h\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"\n// time min 8\n// price min 20\n// if (time > 8) { price = price + 50% price}\n//\n// state.time state.price\n//\n//return :\n//base = price * 8\n//adicional = (time - 8) * (price + price/2)\n//total = base + adicional\n//\n//","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx"],"names":["useState","Home","variaveis","setVariaveis","adicional","base","total","state","setState","time","price","handleChange","event","value","target","name","calcSalary","preventDefault","console","log"],"mappings":";;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAI;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BH,QAAQ,CAAC;AACvCI,IAAAA,SAAS,EAAE,CAD4B;AAEvCC,IAAAA,IAAI,EAAE,CAFiC;AAGvCC,IAAAA,KAAK,EAAE;AAHgC,GAAD,CAAxC;AAMA,MAAI;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,IAAI,EAAE,CADyB;AAE/BC,IAAAA,KAAK,EAAE;AAFwB,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAaD,KAAzB;AAEAL,IAAAA,QAAQ,iCACHD,KADG;AAEN,OAACK,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBF;AAFf,OAAR;AAID,GAPD;;AASA,QAAMG,UAAU,GAAIJ,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACK,cAAN;AAEAd,IAAAA,YAAY,CAAC;AACXC,MAAAA,SAAS,EAAE,CAACG,KAAK,CAACE,IAAN,GAAa,CAAd,KAAoBF,KAAK,CAACG,KAAN,GAAc,GAAlC,CADA;AAEXL,MAAAA,IAAI,EAAEE,KAAK,CAACG,KAAN,GAAc,CAFT;AAGXJ,MAAAA,KAAK,EAAEJ,SAAS,CAACG,IAAV,GAAiBH,SAAS,CAACE;AAHvB,KAAD,CAAZ;AAMAc,IAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAS,CAACG,IAAtB,EAA4BH,SAAS,CAACE,SAAtC,EAAiDF,SAAS,CAACI,KAA3D;AACD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,GAAG,EAAE,CAJP;AAKE,QAAA,KAAK,EAAEC,KAAK,CAACE,IALf;AAME,QAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,OAFL;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,GAAG,EAAE,EAJP;AAKE,QAAA,KAAK,EAAEJ,KAAK,CAACG,KALf;AAME,QAAA,QAAQ,EAAEC;AANZ;AAAA;AAAA;AAAA;AAAA,cAXF,eAmBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEK,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAyBE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAA,oBAAKd,SAAS,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAKH,SAAS,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKF,SAAS,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\n\nexport default function Home() {\n  let [variaveis, setVariaveis] = useState({\n    adicional: 0,\n    base: 0,\n    total: 0,\n  });\n\n  let [state, setState] = useState({\n    time: 0,\n    price: 0,\n  });\n\n  const handleChange = (event) => {\n    let value = event.target.value;\n\n    setState({\n      ...state,\n      [event.target.name]: value,\n    });\n  };\n\n  const calcSalary = (event) => {\n    event.preventDefault();\n\n    setVariaveis({\n      adicional: (state.time - 8) * (state.price * 1.5),\n      base: state.price * 8,\n      total: variaveis.base + variaveis.adicional,\n    });\n\n    console.log(variaveis.base, variaveis.adicional, variaveis.total);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Cálculo de horas trabalhadas</h1>\n      <form id=\"form\">\n        <label htmlFor=\"time\">Horas trabalhadas</label>\n        <input\n          type=\"number\"\n          id=\"time\"\n          name=\"time\"\n          min={8}\n          value={state.time}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"price\">Valor Hora</label>\n        <input\n          type=\"number\"\n          id=\"price\"\n          name=\"price\"\n          min={20}\n          value={state.price}\n          onChange={handleChange}\n        />\n        <button type=\"button\" onClick={calcSalary}>\n          Calcular\n        </button>\n      </form>\n      <table>\n        <tr>\n          <th>Base</th>\n          <th>Adicional</th>\n          <th>Total</th>\n        </tr>\n        <tr>\n          <td>{variaveis.base}</td>\n          <td>{variaveis.adicional}</td>\n          <td>{variaveis.total}</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\n// 1- O colaborador trabalha no mínimo 8h por dia (valor ideal) = R$ 160,00\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais = R$30/h\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"\n\n// time min 8\n// price min 20\n// if (time > 8) { price = price + 50% price}\n\n//\n\n// state.time state.price\n//\n//return :\n//base = price * 8\n//adicional = (time - 8) * (price + price/2)\n//total = base + adicional\n//\n//\n"]},"metadata":{},"sourceType":"module"}