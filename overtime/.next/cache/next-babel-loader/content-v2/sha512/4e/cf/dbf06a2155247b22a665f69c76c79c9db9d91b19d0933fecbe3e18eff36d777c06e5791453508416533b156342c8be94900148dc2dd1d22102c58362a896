{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState(0),\n      time = _useState[0],\n      setTime = _useState[1];\n\n  var _useState2 = useState(0),\n      overtime = _useState2[0],\n      setOvertime = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    setTime(event.target.value);\n    console.log(time);\n    setOvertime(event.target.value);\n    console.log(overtime);\n  };\n\n  var soma = function soma(time, overtime) {\n    return time + overtime;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"C\\xE1lculo de horas trabalhadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"Horas trabalhadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"time\",\n        name: \"time\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"overtime\",\n        children: \"Valor Hora\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"overtime\",\n        name: \"overtime\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          return soma;\n        },\n        children: \"Calcular\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Base\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Adicional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: \"valor x + y\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n} // 1- O colaborador trabalha no mínimo 8h por dia (valor ideal)\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"\n\n_s(Home, \"b4kI56j243F7cb6iXgXPN7jkaFY=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/overtime/pages/index.tsx"],"names":["useState","Home","time","setTime","overtime","setOvertime","handleChange","event","target","value","console","log","soma"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACLD,QAAQ,CAAC,CAAD,CADH;AAAA,MACtBE,IADsB;AAAA,MAChBC,OADgB;;AAAA,mBAEGH,QAAQ,CAAC,CAAD,CAFX;AAAA,MAEtBI,QAFsB;AAAA,MAEZC,WAFY;;AAI7B,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAZ;AAEAG,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD,GAND;;AAQA,MAAMQ,IAAI,GAAG,SAAPA,IAAO,CAACV,IAAD,EAAOE,QAAP,EAAoB;AAC/B,WAAOF,IAAI,GAAGE,QAAd;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,MAAxB;AAA+B,QAAA,IAAI,EAAC,MAApC;AAA2C,QAAA,QAAQ,EAAEE;AAArD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAC,UAHP;AAIE,QAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,cAJF,eAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE;AAAA,iBAAMM,IAAN;AAAA,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAgBE;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,C,CAED;AACA;AACA;AACA;;GApDwBX,I;;KAAAA,I","sourcesContent":["import { useState } from \"react\";\n\nexport default function Home() {\n  const [time, setTime] = useState(0);\n  const [overtime, setOvertime] = useState(0);\n\n  const handleChange = (event) => {\n    setTime(event.target.value);\n    console.log(time);\n\n    setOvertime(event.target.value);\n    console.log(overtime);\n  };\n\n  const soma = (time, overtime) => {\n    return time + overtime;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Cálculo de horas trabalhadas</h1>\n      <form id=\"form\">\n        <label htmlFor=\"time\">Horas trabalhadas</label>\n        <input type=\"number\" id=\"time\" name=\"time\" onChange={handleChange} />\n        <label htmlFor=\"overtime\">Valor Hora</label>\n        <input\n          type=\"number\"\n          id=\"overtime\"\n          name=\"overtime\"\n          onChange={handleChange}\n        />\n        <button type=\"button\" onClick={() => soma}>\n          Calcular\n        </button>\n      </form>\n      <table>\n        <tr>\n          <th>Base</th>\n          <th>Adicional</th>\n          <th>Total</th>\n        </tr>\n        <tr>\n          <td>valor x</td>\n          <td>valor y</td>\n          <td>valor x + y</td>\n        </tr>\n      </table>\n    </div>\n  );\n}\n\n// 1- O colaborador trabalha no mínimo 8h por dia (valor ideal)\n// 2- A cada hora adicional (acima do ideal) de trabalho, ele recebe 50% a mais\n// 3. O valor mínimo do salário/hora deve ser R$20,00\n// 4. Os valores dos cálculos devem ser exibidos somente depois de clicar no botão \"Calcular\"\n"]},"metadata":{},"sourceType":"module"}