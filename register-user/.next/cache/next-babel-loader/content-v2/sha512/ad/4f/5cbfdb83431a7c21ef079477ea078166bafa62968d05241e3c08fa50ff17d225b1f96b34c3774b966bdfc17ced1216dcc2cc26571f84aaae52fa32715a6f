{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\";\nimport { Button, Form, FormField, Input } from \"./style\";\nexport default function RegisterForm() {\n  // const { handleChange, handleSubmit, user } = useContext(UserContext);\n  // const [user, setUser] = useState({\n  //   name: \"\",\n  //   birthDay: \"\",\n  //   cpf: \"\",\n  //   profession: \" \",\n  // });\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n  //   setUser({ ...user, [name]: value });\n  //   console.log(name, value);\n  // };\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n  //   console.log(\"ok\");\n  // };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    name: \"form\",\n    id: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nome completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        minLength: 3 // value={user.name}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDay\",\n        children: \"Data de nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"birthDay\",\n        name: \"birthDay\" // value={state.birthDay}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        maxLength: 11,\n        id: \"cpf\",\n        name: \"cpf\" // value={state.cpf}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profession\",\n        children: \"Profiss\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"profession\" // value={profession}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n} // 2. Não se preocupe com o formato do CPF, somente números no campo\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["Button","Form","FormField","Input","RegisterForm","handleSubmit","handleChange"],"mappings":";;AAEA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,SAA/C;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEC,YAAhB;AAA8B,IAAA,IAAI,EAAC,MAAnC;AAA0C,IAAA,EAAE,EAAC,MAA7C;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAE,CAJb,CAKE;AALF;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,QAAQ,EAAEC;AAPZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAaE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,IAAI,EAAC,UAHP,CAIE;AAJF;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAEA;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAwBE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAE,EAFb;AAGE,QAAA,EAAE,EAAC,KAHL;AAIE,QAAA,IAAI,EAAC,KAJP,CAKE;AALF;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,QAAQ,EAAEA;AAPZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF,eAoCE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,YAFL,CAGE;AAHF;AAIE,QAAA,QAAQ,MAJV;AAKE,QAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApCF,eA8CE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkDD,C,CAED;AAEA;AACA;AACA","sourcesContent":["import { useState } from \"react\";\n\nimport { Button, Form, FormField, Input } from \"./style\";\n\nexport default function RegisterForm() {\n  // const { handleChange, handleSubmit, user } = useContext(UserContext);\n\n  // const [user, setUser] = useState({\n  //   name: \"\",\n  //   birthDay: \"\",\n  //   cpf: \"\",\n  //   profession: \" \",\n  // });\n\n  // const handleChange = (e) => {\n  //   const { name, value } = e.target;\n\n  //   setUser({ ...user, [name]: value });\n\n  //   console.log(name, value);\n  // };\n\n  // const handleSubmit = (event) => {\n  //   event.preventDefault();\n\n  //   console.log(\"ok\");\n  // };\n\n  return (\n    <Form onSubmit={handleSubmit} name=\"form\" id=\"form\">\n      <FormField>\n        <label htmlFor=\"name\">Nome completo</label>\n        <Input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          minLength={3}\n          // value={user.name}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"birthDay\">Data de nascimento</label>\n        <Input\n          type=\"text\"\n          id=\"birthDay\"\n          name=\"birthDay\"\n          // value={state.birthDay}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"cpf\">CPF</label>\n        <Input\n          type=\"text\"\n          maxLength={11}\n          id=\"cpf\"\n          name=\"cpf\"\n          // value={state.cpf}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"profession\">Profissão</label>\n        <Input\n          type=\"text\"\n          id=\"profession\"\n          // value={profession}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <Button type=\"submit\">Cadastrar</Button>\n    </Form>\n  );\n}\n\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}