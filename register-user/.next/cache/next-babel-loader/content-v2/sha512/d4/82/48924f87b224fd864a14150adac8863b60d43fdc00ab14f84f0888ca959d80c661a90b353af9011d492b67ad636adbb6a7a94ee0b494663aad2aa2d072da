{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\nexport default function RegisterForm() {\n  const {\n    0: user,\n    1: setUser\n  } = useState({\n    name: \"\",\n    birthDay: \"\",\n    cpf: \"\",\n    profession: \" \"\n  });\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(_objectSpread(_objectSpread({}, user), {}, {\n      [name]: value\n    }));\n    console.log(name, value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"ok\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    name: \"form\",\n    id: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nome completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        minLength: 3,\n        value: user.name,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDay\",\n        children: \"Data de nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"birthDay\",\n        name: \"birthDay\" // value={state.birthDay}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        maxLength: 11,\n        id: \"cpf\",\n        name: \"cpf\" // value={state.cpf}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profession\",\n        children: \"Profiss\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"profession\" // value={profession}\n        ,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n} // 2. Não se preocupe com o formato do CPF, somente números no campo\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["useState","Button","Form","FormField","Input","RegisterForm","user","setUser","name","birthDay","cpf","profession","handleChange","e","value","target","console","log","handleSubmit","event","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\n\nimport { Button, Form, FormField, Input } from \"./style\";\n\nexport default function RegisterForm() {\n  const [user, setUser] = useState({\n    name: \"\",\n    birthDay: \"\",\n    cpf: \"\",\n    profession: \" \",\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    setUser({ ...user, [name]: value });\n\n    console.log(name, value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    console.log(\"ok\");\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} name=\"form\" id=\"form\">\n      <FormField>\n        <label htmlFor=\"name\">Nome completo</label>\n        <Input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          minLength={3}\n          value={user.name}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"birthDay\">Data de nascimento</label>\n        <Input\n          type=\"text\"\n          id=\"birthDay\"\n          name=\"birthDay\"\n          // value={state.birthDay}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"cpf\">CPF</label>\n        <Input\n          type=\"text\"\n          maxLength={11}\n          id=\"cpf\"\n          name=\"cpf\"\n          // value={state.cpf}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"profession\">Profissão</label>\n        <Input\n          type=\"text\"\n          id=\"profession\"\n          // value={profession}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <Button type=\"submit\">Cadastrar</Button>\n    </Form>\n  );\n}\n\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}