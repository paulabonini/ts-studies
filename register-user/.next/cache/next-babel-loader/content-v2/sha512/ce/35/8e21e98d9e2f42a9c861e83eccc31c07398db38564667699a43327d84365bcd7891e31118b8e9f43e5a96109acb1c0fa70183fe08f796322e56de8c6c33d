{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\";\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\nconst initialState = {\n  cpf: \"\",\n  date: \"\",\n  focus: \"\",\n  name: \"\",\n  number: \"\",\n  cpfErr: \"\",\n  nameErr: \"\",\n  dateErr: \"\"\n};\nexport default function RegisterForm() {\n  const {\n    0: state,\n    1: setState\n  } = useState();\n\n  const handleInputFocus = e => {\n    this.setState({\n      focus: e.target.name\n    });\n  };\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  const validate = () => {\n    let cpfErr = \"\";\n    let nameErr = \"\";\n    let dateErr = \"\";\n    let numberPattern = \"[d| ]{16,22}\";\n    let expiryPattern = \"dd/dd\";\n    let cvcPattern = \"d{3,4}\";\n\n    if (!this.state.number.match(numberPattern)) {\n      cpfErr = \"Número de cartão inválido\";\n    }\n\n    if (!this.state.name.includes(\" \")) {\n      nameErr = \"Insira seu nome completo\";\n    }\n\n    if (!this.state.expiry.match(expiryPattern)) {\n      dateErr = \"Data inválida\";\n    }\n\n    if (cpfErr || nameErr || dateErr) {\n      this.setState({\n        cpfErr,\n        nameErr,\n        dateErr\n      });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state); //clear form\n\n      this.setState(initialState);\n    }\n  };\n\n  function render() {\n    let inputStyle = {\n      borderBottom: \"2px solid #C9C9C9\"\n    };\n    let errStyle = {\n      borderBottom: \"2px solid #DE4B4B\"\n    };\n    return /*#__PURE__*/_jsxDEV(Form, {\n      action: \"\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"completedName\",\n          children: \"Nome completo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"completedName\",\n          minLength: 3,\n          name: \"name\",\n          placeholder: \" \",\n          style: !this.state.nameErr ? inputStyle : errStyle,\n          onChange: this.handleInputChange,\n          onFocus: this.handleInputFocus,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"birthDay\",\n          children: \"Data de nascimento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"date\",\n          id: \"birthDay\",\n          ame: \"expiry\",\n          placeholder: \" \",\n          style: !this.state.dateErr ? inputStyle : errStyle,\n          onChange: this.handleInputChange,\n          onFocus: this.handleInputFocus,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cpf\",\n          children: \"CPF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"number\",\n          id: \"cpf\",\n          name: \"number\",\n          placeholder: \" \",\n          maxLength: 11,\n          style: !this.state.cpfErr ? inputStyle : errStyle,\n          onChange: this.handleInputChange,\n          onFocus: this.handleInputFocus,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormField, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"profession\",\n          children: \"Profiss\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          id: \"profession\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n} // 1. Todos os campos são obrigatórios, não deixe o usuário enviar o formulário caso não preencha todos\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n// 3. Caso um input esteja inválido, deixe sua borda vermelha\n// 4. O campo de nome deve ter pelo menos 3 caracteres\n// 5. Não haverá nenhuma integração, portanto você pode utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["useState","Button","Form","FormField","Input","initialState","cpf","date","focus","name","number","cpfErr","nameErr","dateErr","RegisterForm","state","setState","handleInputFocus","e","target","handleInputChange","value","validate","numberPattern","expiryPattern","cvcPattern","match","includes","expiry","handleSubmit","event","preventDefault","isValid","console","log","render","inputStyle","borderBottom","errStyle"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\n\nconst initialState = {\n  cpf: \"\",\n  date: \"\",\n  focus: \"\",\n  name: \"\",\n  number: \"\",\n  cpfErr: \"\",\n  nameErr: \"\",\n  dateErr: \"\",\n};\n\nexport default function RegisterForm() {\n  const [state, setState] = useState();\n\n  const handleInputFocus = (e) => {\n    this.setState({ focus: e.target.name });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  const validate = () => {\n    let cpfErr = \"\";\n    let nameErr = \"\";\n    let dateErr = \"\";\n\n    let numberPattern = \"[d| ]{16,22}\";\n    let expiryPattern = \"dd/dd\";\n    let cvcPattern = \"d{3,4}\";\n\n    if (!this.state.number.match(numberPattern)) {\n      cpfErr = \"Número de cartão inválido\";\n    }\n\n    if (!this.state.name.includes(\" \")) {\n      nameErr = \"Insira seu nome completo\";\n    }\n\n    if (!this.state.expiry.match(expiryPattern)) {\n      dateErr = \"Data inválida\";\n    }\n\n    if (cpfErr || nameErr || dateErr) {\n      this.setState({ cpfErr, nameErr, dateErr });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      console.log(this.state);\n      //clear form\n      this.setState(initialState);\n    }\n  };\n\n  function render() {\n    let inputStyle = {\n      borderBottom: \"2px solid #C9C9C9\",\n    };\n\n    let errStyle = {\n      borderBottom: \"2px solid #DE4B4B\",\n    };\n    return (\n      <Form action=\"\" onSubmit={this.handleSubmit}>\n        <FormField>\n          <label htmlFor=\"completedName\">Nome completo</label>\n          <Input\n            type=\"text\"\n            id=\"completedName\"\n            minLength={3}\n            name=\"name\"\n            placeholder=\" \"\n            style={!this.state.nameErr ? inputStyle : errStyle}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            required\n          />\n        </FormField>\n        <FormField>\n          <label htmlFor=\"birthDay\">Data de nascimento</label>\n          <Input\n            type=\"date\"\n            id=\"birthDay\"\n            ame=\"expiry\"\n            placeholder=\" \"\n            style={!this.state.dateErr ? inputStyle : errStyle}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            required\n          />\n        </FormField>\n        <FormField>\n          <label htmlFor=\"cpf\">CPF</label>\n          <Input\n            type=\"number\"\n            id=\"cpf\"\n            name=\"number\"\n            placeholder=\" \"\n            maxLength={11}\n            style={!this.state.cpfErr ? inputStyle : errStyle}\n            onChange={this.handleInputChange}\n            onFocus={this.handleInputFocus}\n            required\n          />\n        </FormField>\n        <FormField>\n          <label htmlFor=\"profession\">Profissão</label>\n          <Input type=\"text\" id=\"profession\" required />\n        </FormField>\n        <Button type=\"submit\">Cadastrar</Button>\n      </Form>\n    );\n  }\n}\n\n// 1. Todos os campos são obrigatórios, não deixe o usuário enviar o formulário caso não preencha todos\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n// 3. Caso um input esteja inválido, deixe sua borda vermelha\n// 4. O campo de nome deve ter pelo menos 3 caracteres\n// 5. Não haverá nenhuma integração, portanto você pode utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}