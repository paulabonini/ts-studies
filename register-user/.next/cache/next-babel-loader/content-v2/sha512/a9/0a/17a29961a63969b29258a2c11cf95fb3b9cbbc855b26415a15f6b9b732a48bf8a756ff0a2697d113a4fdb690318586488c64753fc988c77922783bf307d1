{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/contexts/UserContext/UserContext.tsx\";\nimport { createContext, useState } from \"react\"; // interface User {\n//   name: string;\n//   birthday: Date;\n//   cpf: string;\n//   profession: string;\n// }\n\nexport const UserContext = /*#__PURE__*/createContext({});\nexport const UserProvider = props => {\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n\n  const handleChange = e => {\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  return;\n\n  /*#__PURE__*/\n  _jsxDEV(UserContext.Provider, {\n    value: {\n      handleChange\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/contexts/UserContext/UserContext.tsx"],"names":["createContext","useState","UserContext","UserProvider","props","name","setName","handleChange","e","target","value","console","log","children"],"mappings":";;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAMA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AACrC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBL,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMM,YAAY,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAHD;;AAKA;;AACA;AAAA,UAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLE,MAAAA;AADK,KADT;AAAA,cAKGH,KAAK,CAACS;AALT;AAAA;AAAA;AAAA;AAAA;AAOD,CAhBM","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\n// interface User {\n//   name: string;\n//   birthday: Date;\n//   cpf: string;\n//   profession: string;\n// }\n\ninterface UserContextData {\n  handleChange: (e) => void;\n}\n\nexport const UserContext = createContext({} as UserContextData);\n\nexport const UserProvider = (props) => {\n  const [name, setName] = useState(\"\");\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n    console.log(name);\n  };\n\n  return;\n  <UserContext.Provider\n    value={{\n      handleChange,\n    }}\n  >\n    {props.children}\n  </UserContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}