{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/home/paulabonini/bexs/ts-studies/register-user/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\nexport default function RegisterForm() {\n  _s();\n\n  var _useState = useState([]),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var router = useRouter();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    router.push({\n      pathname: \"/user-page\"\n    });\n  }\n\n  var form = document.getElementById(\"formulario\");\n  form.addEventListener(\"submit\", function (e) {\n    e.preventDefault();\n\n    var _map = [\"sobre\", \"nome\", \"titulo\"].map(function (name) {\n      return form.querySelector(\"[name=\\\"\".concat(name, \"\\\"]\")).value;\n    }),\n        _map2 = _slicedToArray(_map, 3),\n        sobre = _map2[0],\n        nome = _map2[1],\n        titulo = _map2[2];\n\n    alert(\"\".concat(sobre, \", \").concat(nome, \" - \").concat(titulo));\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    action: \"\",\n    onSubmit: handleSubmit,\n    id: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completedName\",\n        children: \"Nome completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"completedName\",\n        minLength: 3,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDay\",\n        children: \"Data de nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        id: \"birthDay\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        maxLength: 11,\n        id: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profession\",\n        children: \"Profiss\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"profession\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} // 2. Não se preocupe com o formato do CPF, somente números no campo\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n\n_s(RegisterForm, \"5UH7zXW8njxXWQMVKd+WkHgkKxU=\", false, function () {\n  return [useRouter];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["useRouter","useState","Button","Form","FormField","Input","RegisterForm","user","setUser","router","handleSubmit","event","preventDefault","push","pathname","form","document","getElementById","addEventListener","e","map","name","querySelector","value","sobre","nome","titulo","alert"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,SAA/C;AASA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA,kBACbL,QAAQ,CAAC,EAAD,CADK;AAAA,MAC9BM,IAD8B;AAAA,MACxBC,OADwB;;AAErC,MAAMC,MAAM,GAAGT,SAAS,EAAxB;;AAEA,WAASU,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,MAAM,CAACI,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE;AADA,KAAZ;AAGD;;AAED,MAAMC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAb;AACAF,EAAAA,IAAI,CAACG,gBAAL,CAAsB,QAAtB,EAAgC,UAAUC,CAAV,EAAa;AAC3CA,IAAAA,CAAC,CAACP,cAAF;;AAD2C,eAEb,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,EAA4BQ,GAA5B,CAC5B,UAACC,IAAD;AAAA,aAAUN,IAAI,CAACO,aAAL,mBAA6BD,IAA7B,UAAuCE,KAAjD;AAAA,KAD4B,CAFa;AAAA;AAAA,QAEpCC,KAFoC;AAAA,QAE7BC,IAF6B;AAAA,QAEvBC,MAFuB;;AAK3CC,IAAAA,KAAK,WAAIH,KAAJ,eAAcC,IAAd,gBAAwBC,MAAxB,EAAL;AACD,GAND;AAQA,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,EAAb;AAAgB,IAAA,QAAQ,EAAEhB,YAA1B;AAAwC,IAAA,EAAE,EAAC,YAA3C;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAE,CAAjD;AAAoD,QAAA,QAAQ;AAA5D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,QAAQ;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAE,EAA9B;AAAkC,QAAA,EAAE,EAAC,KAArC;AAA2C,QAAA,QAAQ;AAAnD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF,eAaE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,YAAtB;AAAmC,QAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eAiBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,C,CAED;AAEA;AACA;AACA;;GA/CwBJ,Y;UAEPN,S;;;KAFOM,Y","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\n\ntype User = {\n  name: string;\n  birthday: Date;\n  cpf: string;\n  profession: string;\n};\n\nexport default function RegisterForm() {\n  const [user, setUser] = useState([]);\n  const router = useRouter();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    router.push({\n      pathname: \"/user-page\",\n    });\n  }\n\n  const form = document.getElementById(\"formulario\");\n  form.addEventListener(\"submit\", function (e) {\n    e.preventDefault();\n    const [sobre, nome, titulo] = [\"sobre\", \"nome\", \"titulo\"].map(\n      (name) => form.querySelector(`[name=\"${name}\"]`).value\n    );\n    alert(`${sobre}, ${nome} - ${titulo}`);\n  });\n\n  return (\n    <Form action=\"\" onSubmit={handleSubmit} id=\"formulario\">\n      <FormField>\n        <label htmlFor=\"completedName\">Nome completo</label>\n        <Input type=\"text\" id=\"completedName\" minLength={3} required />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"birthDay\">Data de nascimento</label>\n        <Input type=\"date\" id=\"birthDay\" required />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"cpf\">CPF</label>\n        <Input type=\"text\" maxLength={11} id=\"cpf\" required />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"profession\">Profissão</label>\n        <Input type=\"text\" id=\"profession\" required />\n      </FormField>\n      <Button type=\"submit\">Cadastrar</Button>\n    </Form>\n  );\n}\n\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}