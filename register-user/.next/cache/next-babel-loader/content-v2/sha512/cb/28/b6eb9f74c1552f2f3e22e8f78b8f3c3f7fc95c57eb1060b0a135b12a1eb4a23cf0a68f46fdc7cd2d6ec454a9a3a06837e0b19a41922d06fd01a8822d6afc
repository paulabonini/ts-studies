{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\"; // type User = {\n//   name: string;\n//   birthday: Date;\n//   cpf: string;\n//   profession: string;\n// };\n\nexport default function RegisterForm() {\n  const router = useRouter();\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    router.push({\n      pathname: \"/user-page\"\n    });\n  }\n\n  const handleChange = e => {\n    setName(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Nome completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        minLength: 3,\n        required: true,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDay\",\n        children: \"Data de nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        id: \"birthDay\",\n        name: \"birthDay\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        maxLength: 11,\n        id: \"cpf\",\n        name: \"cpf\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profession\",\n        children: \"Profiss\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"profession\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // 2. Não se preocupe com o formato do CPF, somente números no campo\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["useRouter","useState","Button","Form","FormField","Input","RegisterForm","router","name","setName","handleSubmit","event","preventDefault","push","pathname","handleChange","e"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,QAA+C,SAA/C,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,YAAT,GAAwB;AACrC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEA,QAAM;AAAA,OAACQ,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASS,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,MAAM,CAACM,IAAP,CAAY;AACVC,MAAAA,QAAQ,EAAE;AADA,KAAZ;AAGD;;AAED,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BP,IAAAA,OAAO,CAACO,CAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA,4BACE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,SAAS,EAAE,CAJb;AAKE,QAAA,QAAQ,MALV;AAME,QAAA,QAAQ,EAAEK;AANZ;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,IAAI,EAAC,UAAtC;AAAiD,QAAA,QAAQ;AAAzD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAE,EAA9B;AAAkC,QAAA,EAAE,EAAC,KAArC;AAA2C,QAAA,IAAI,EAAC,KAAhD;AAAsD,QAAA,QAAQ;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,eAoBE,QAAC,SAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,YAAtB;AAAmC,QAAA,QAAQ;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,eAwBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,C,CAED;AAEA;AACA;AACA","sourcesContent":["import { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\n\n// type User = {\n//   name: string;\n//   birthday: Date;\n//   cpf: string;\n//   profession: string;\n// };\n\nexport default function RegisterForm() {\n  const router = useRouter();\n\n  const [name, setName] = useState(\"\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    router.push({\n      pathname: \"/user-page\",\n    });\n  }\n\n  const handleChange = (e) => {\n    setName(e);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormField>\n        <label htmlFor=\"name\">Nome completo</label>\n        <Input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          minLength={3}\n          required\n          onChange={handleChange}\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"birthDay\">Data de nascimento</label>\n        <Input type=\"date\" id=\"birthDay\" name=\"birthDay\" required />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"cpf\">CPF</label>\n        <Input type=\"text\" maxLength={11} id=\"cpf\" name=\"cpf\" required />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"profession\">Profissão</label>\n        <Input type=\"text\" id=\"profession\" required />\n      </FormField>\n      <Button type=\"submit\">Cadastrar</Button>\n    </Form>\n  );\n}\n\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n\n//após o preechimento do formulário, redirecionar para a página de perfil de usuário para que possa verificar minhas informações cadastradas no sistema\n//-- Use Query parameters\n//utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}