{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/home/paulabonini/bexs/ts-studies/register-user/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\nvar initialState = {\n  cpf: \"\",\n  date: \"\",\n  focus: \"\",\n  name: \"\",\n  number: \"\",\n  cpfErr: \"\",\n  nameErr: \"\",\n  dateErr: \"\"\n};\nexport default function RegisterForm() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var handleInputFocus = function handleInputFocus(e) {\n    _this.setState({\n      focus: e.target.name\n    });\n  };\n\n  var handleInputChange = function handleInputChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n\n    _this.setState(_defineProperty({}, name, value));\n  };\n\n  var validate = function validate() {\n    var cpfErr = \"\";\n    var nameErr = \"\";\n    var dateErr = \"\";\n    var numberPattern = \"[d| ]{16,22}\";\n    var expiryPattern = \"dd/dd\";\n    var cvcPattern = \"d{3,4}\";\n\n    if (!_this.state.number.match(numberPattern)) {\n      cpfErr = \"Número de cartão inválido\";\n    }\n\n    if (!_this.state.name.includes(\" \")) {\n      nameErr = \"Insira seu nome completo\";\n    }\n\n    if (!_this.state.expiry.match(expiryPattern)) {\n      dateErr = \"Data inválida\";\n    }\n\n    if (cpfErr || nameErr || dateErr) {\n      _this.setState({\n        cpfErr: cpfErr,\n        nameErr: nameErr,\n        dateErr: dateErr\n      });\n\n      return false;\n    }\n\n    return true;\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n\n    var isValid = _this.validate();\n\n    if (isValid) {\n      console.log(_this.state); //clear form\n\n      _this.setState(initialState);\n    }\n  };\n\n  var inputStyle = {\n    borderBottom: \"2px solid #C9C9C9\"\n  };\n  var errStyle = {\n    borderBottom: \"2px solid #DE4B4B\"\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    action: \"\",\n    onSubmit: this.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"completedName\",\n        children: \"Nome completo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"completedName\",\n        minLength: 3,\n        name: \"name\",\n        placeholder: \" \",\n        style: !this.state.nameErr ? inputStyle : errStyle,\n        onChange: this.handleInputChange,\n        onFocus: this.handleInputFocus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"birthDay\",\n        children: \"Data de nascimento\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"date\",\n        id: \"birthDay\",\n        ame: \"expiry\",\n        placeholder: \" \",\n        style: !this.state.dateErr ? inputStyle : errStyle,\n        onChange: this.handleInputChange,\n        onFocus: this.handleInputFocus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cpf\",\n        children: \"CPF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"number\",\n        id: \"cpf\",\n        name: \"number\",\n        placeholder: \" \",\n        maxLength: 11,\n        style: !this.state.cpfErr ? inputStyle : errStyle,\n        onChange: this.handleInputChange,\n        onFocus: this.handleInputFocus,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormField, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"profession\",\n        children: \"Profiss\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        id: \"profession\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      children: \"Cadastrar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n} // 1. Todos os campos são obrigatórios, não deixe o usuário enviar o formulário caso não preencha todos\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n// 3. Caso um input esteja inválido, deixe sua borda vermelha\n// 4. O campo de nome deve ter pelo menos 3 caracteres\n// 5. Não haverá nenhuma integração, portanto você pode utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n\n_s(RegisterForm, \"NTqKeJem0kxPdWdnhkCI+0oYHTA=\");\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/paulabonini/bexs/ts-studies/register-user/components/RegisterForm/index.tsx"],"names":["useState","Button","Form","FormField","Input","initialState","cpf","date","focus","name","number","cpfErr","nameErr","dateErr","RegisterForm","state","setState","handleInputFocus","e","target","handleInputChange","value","validate","numberPattern","expiryPattern","cvcPattern","match","includes","expiry","handleSubmit","event","preventDefault","isValid","console","log","inputStyle","borderBottom","errStyle"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { Button, Form, FormField, Input } from \"./style\";\n\ntype UserRegisterForm = {\n  name: string;\n  cpf: number;\n  handleInputFocus: () => void;\n  handleInputChange: () => void;\n  validate: () => void;\n  handleSubmit: () => void;\n};\n\nconst initialState = {\n  cpf: \"\",\n  date: \"\",\n  focus: \"\",\n  name: \"\",\n  number: \"\",\n  cpfErr: \"\",\n  nameErr: \"\",\n  dateErr: \"\",\n};\n\nexport default function RegisterForm() {\n  const [state, setState] = useState();\n\n  const handleInputFocus = (e) => {\n    this.setState({ focus: e.target.name });\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({ [name]: value });\n  };\n\n  const validate = () => {\n    let cpfErr = \"\";\n    let nameErr = \"\";\n    let dateErr = \"\";\n\n    let numberPattern = \"[d| ]{16,22}\";\n    let expiryPattern = \"dd/dd\";\n    let cvcPattern = \"d{3,4}\";\n\n    if (!this.state.number.match(numberPattern)) {\n      cpfErr = \"Número de cartão inválido\";\n    }\n\n    if (!this.state.name.includes(\" \")) {\n      nameErr = \"Insira seu nome completo\";\n    }\n\n    if (!this.state.expiry.match(expiryPattern)) {\n      dateErr = \"Data inválida\";\n    }\n\n    if (cpfErr || nameErr || dateErr) {\n      this.setState({ cpfErr, nameErr, dateErr });\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      console.log(this.state);\n      //clear form\n      this.setState(initialState);\n    }\n  };\n\n  let inputStyle = {\n    borderBottom: \"2px solid #C9C9C9\",\n  };\n\n  let errStyle = {\n    borderBottom: \"2px solid #DE4B4B\",\n  };\n  return (\n    <Form action=\"\" onSubmit={this.handleSubmit}>\n      <FormField>\n        <label htmlFor=\"completedName\">Nome completo</label>\n        <Input\n          type=\"text\"\n          id=\"completedName\"\n          minLength={3}\n          name=\"name\"\n          placeholder=\" \"\n          style={!this.state.nameErr ? inputStyle : errStyle}\n          onChange={this.handleInputChange}\n          onFocus={this.handleInputFocus}\n          required\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"birthDay\">Data de nascimento</label>\n        <Input\n          type=\"date\"\n          id=\"birthDay\"\n          ame=\"expiry\"\n          placeholder=\" \"\n          style={!this.state.dateErr ? inputStyle : errStyle}\n          onChange={this.handleInputChange}\n          onFocus={this.handleInputFocus}\n          required\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"cpf\">CPF</label>\n        <Input\n          type=\"number\"\n          id=\"cpf\"\n          name=\"number\"\n          placeholder=\" \"\n          maxLength={11}\n          style={!this.state.cpfErr ? inputStyle : errStyle}\n          onChange={this.handleInputChange}\n          onFocus={this.handleInputFocus}\n          required\n        />\n      </FormField>\n      <FormField>\n        <label htmlFor=\"profession\">Profissão</label>\n        <Input type=\"text\" id=\"profession\" required />\n      </FormField>\n      <Button type=\"submit\">Cadastrar</Button>\n    </Form>\n  );\n}\n\n// 1. Todos os campos são obrigatórios, não deixe o usuário enviar o formulário caso não preencha todos\n// 2. Não se preocupe com o formato do CPF, somente números no campo\n// 3. Caso um input esteja inválido, deixe sua borda vermelha\n// 4. O campo de nome deve ter pelo menos 3 caracteres\n// 5. Não haverá nenhuma integração, portanto você pode utilizar o recurso de roteamento do NextJS para passar informação de uma página pra outra\n"]},"metadata":{},"sourceType":"module"}